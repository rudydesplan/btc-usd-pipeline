name: 'Terraform'
on:
  push:
    branches: [ "main" ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  AWS_REGION: us-east-1
  TF_WORKING_DIR: ./terraform
  TF_VERSION: 1.9.5
  TF_STATE_BUCKET: terraform-state-bucket-dsti
  TF_STATE_KEY: btc-usd-pipeline/terraform.tfstate
  TF_LOCK_TABLE: terraform-state-lock-table-dsti

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-lint:
    name: 'Terraform Lint'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3.1.2
      with:
        terraform_version: ${{ env.TF_VERSION }}
    - name: Terraform Format
      run: |
        terraform fmt -recursive
        terraform fmt -check
    - name: tflint
      uses: terraform-linters/setup-tflint@v4
    - name: Run tflint
      run: tflint --recursive
      working-directory: ${{ env.TF_WORKING_DIR }}

  terraform-security-scan:
    name: 'Terraform Security Scan'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Run Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ${{ env.TF_WORKING_DIR }}

  terraform-plan:
    name: 'Terraform Plan'
    needs: [terraform-lint, terraform-security-scan]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3.1.2
      with:
        terraform_version: ${{ env.TF_VERSION }}
    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.TF_WORKING_DIR }}
    - name: Terraform Validate
      run: terraform validate
      working-directory: ${{ env.TF_WORKING_DIR }}
    - name: Terraform Plan
      run: |
        TF_LOG=TRACE terraform plan \
          -out=tfplan
      working-directory: ${{ env.TF_WORKING_DIR }}
    - name: Upload Terraform Plan
      uses: actions/upload-artifact@v4.4.0
      with:
        name: tfplan
        path: ${{ env.TF_WORKING_DIR }}/tfplan
        retention-days: 5

  terraform-apply:
    name: 'Terraform Apply'
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3.1.2
      with:
        terraform_version: ${{ env.TF_VERSION }}
    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.TF_WORKING_DIR }}
    - name: Download Terraform Plan
      uses: actions/download-artifact@v4.1.8
      with:
        name: tfplan
        path: ${{ env.TF_WORKING_DIR }}
    - name: Verify Downloaded Artifact
      run: |
        if [ ! -f "${{ env.TF_WORKING_DIR }}/tfplan" ]; then
          echo "Error: Terraform plan file not found"
          exit 1
        fi
        ls -la ${{ env.TF_WORKING_DIR }}
    - name: Terraform Apply
      run: |
        TF_LOG=TRACE terraform apply \
          -auto-approve tfplan
      working-directory: ${{ env.TF_WORKING_DIR }}
    - name: Terraform Output
      if: success()
      run: |
        terraform output
      working-directory: ${{ env.TF_WORKING_DIR }}
